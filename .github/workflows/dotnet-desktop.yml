name: .NET Core Desktop

on: push

jobs:
  build:
    runs-on: windows-latest
    steps:
    - id: signtool
      name: Find signtool.exe
      shell: cmd
      run: where /f /r "%programfiles(x86)%\windows kits\10\bin" signtool.exe|for /f "delims=" %%s in ('find "\x64\"') do @echo signtool=%%s > %GITHUB_OUTPUT%
      
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
  
    - name: Build the application
      run: dotnet build -c Release --verbosity quiet

    - name : coverlet
      uses: b3b00/coverlet-action@11.9
      with:
        testProject: 'Tests/Tests.csproj'
        output: 'lcov.info'
        outputFormat: 'lcov'
        excludes: '[test]test.*'
    - name: Upload coverage report
      uses: coverallsapp/github-action@1.1.3
      with:
        github-token: ${{secrets.GITHUB_TOKEN }} 
        path-to-lcov: Tests/lcov.info

    - name: Publish
      run: |
        dotnet publish RepopulatorCli/RepopulatorCli.csproj -o RepopulatorCli-win-x64 -c Release -p:PublishReadyToRun=false -p:PublishSingleFile=true -p:PublishTrimmed=false --self-contained true -r win-x64
        dotnet publish RepopulatorCli/RepopulatorCli.csproj -o RepopulatorCli-lin-x64 -c Release -p:PublishReadyToRun=false -p:PublishSingleFile=true -p:PublishTrimmed=false --self-contained true -r linux-x64
        dotnet publish TemplateBuilder/TemplateBuilder.csproj -o template-builder -c Release -p:PublishSingleFile=true --self-contained true -r win-x64
      
    # Decode the base 64 encoded pfx and save the Signing_Certificate
    - name: Decode the pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.DIGICERT_PFX }}")
        $certificatePath = Join-Path -Path . -ChildPath GitHubActionsWorkflow.pfx
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    - name: Sign
      shell: cmd
      run: |
        ${{steps.signtool.outputs.signtool}} Sign /f GitHubActionsWorkflow.pfx /p ${{ secrets.DIGICERT_PASSWORD }} /fd sha256 /tr http://timestamp.digicert.com /td sha256 RepopulatorCli-win-x64/RepopulatorCli.exe template-builder/TemplateBuilder.exe template-builder/TypeGuesser.dll template-builder/Repopulator.dll template-builder/Fansi*.dll template-builder/BadMedicine*.dll template-builder/DicomTypeTranslation.dll
        mkdir -p dist
        powershell.exe -nologo -noprofile -command "& { Add-Type -A 'System.IO.Compression.FileSystem'; [IO.Compression.ZipFile]::CreateFromDirectory('RepopulatorCli-win-x64', 'dist/RepopulatorCli-win-x64.zip');  [IO.Compression.ZipFile]::CreateFromDirectory('RepopulatorCli-lin-x64', 'dist/RepopulatorCli-lin-x64.zip');  [IO.Compression.ZipFile]::CreateFromDirectory('template-builder', 'dist/template-builder.zip'); }"

    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: |
          dist

    # Remove the pfx
    - name: Remove the pfx
      run: Remove-Item -path GitHubActionsWorkflow.pfx
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      if: contains(github.ref, 'refs/tags/v')
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: dist/*.zip
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true
