name: .NET Core Desktop

on: push

jobs:
  build:
    runs-on: windows-latest
    steps:
    - id: signtool
      name: Find signtool.exe
      shell: cmd
      run: where /f /r "%programfiles(x86)%\windows kits\10\bin" signtool.exe|for /f "delims=" %%s in ('find "\x64\"') do @echo signtool=%%s > %GITHUB_OUTPUT%
      
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET 8 SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
  
    - name: Build and test the application
      shell: cmd
      run: |
        dotnet test --nologo --verbosity minimal --collect:"XPlat Code Coverage" --settings coverlet.runsettings -c Release --results-directory coverage
        for /r coverage %%f in (coverage.*) do @move %%f lcov.bad
        perl lcov-fix.pl < lcov.bad > lcov.info

    - name: Upload coverage report
      uses: coverallsapp/github-action@v2.3.4
      with:
        github-token: ${{secrets.GITHUB_TOKEN }} 
        path-to-lcov: lcov.info

    - name: Publish
      run: |
        dotnet publish RepopulatorCli/RepopulatorCli.csproj -o RepopulatorCli-win-x64 -c Release -p:PublishReadyToRun=true -p:PublishSingleFile=true -p:PublishTrimmed=false --self-contained true -r win-x64
        dotnet publish RepopulatorCli/RepopulatorCli.csproj -o RepopulatorCli-lin-x64 -c Release -p:PublishReadyToRun=true -p:PublishSingleFile=true -p:PublishTrimmed=false --self-contained true -r linux-x64
        dotnet publish TemplateBuilder/TemplateBuilder.csproj -o template-builder -c Release -p:PublishReadyToRun=true -p:PublishSingleFile=true --self-contained true -r win-x64
    
    - name: Sign & compress results
      shell: bash
      run: |
        dotnet tool install --global AzureSignTool 
        AzureSignTool sign -kvu "${{ secrets.AZURE_KEY_VAULT_URI }}" -kvi "${{ secrets.AZURE_CLIENT_ID }}" -kvt "${{ secrets.AZURE_TENANT_ID }}" -kvs "${{ secrets.AZURE_CLIENT_SECRET }}" -kvc ${{ secrets.AZURE_CERT_NAME }} -tr http://timestamp.digicert.com -v RepopulatorCli-win-x64/RepopulatorCli.exe
        AzureSignTool sign -kvu "${{ secrets.AZURE_KEY_VAULT_URI }}" -kvi "${{ secrets.AZURE_CLIENT_ID }}" -kvt "${{ secrets.AZURE_TENANT_ID }}" -kvs "${{ secrets.AZURE_CLIENT_SECRET }}" -kvc ${{ secrets.AZURE_CERT_NAME }} -tr http://timestamp.digicert.com -v template-builder/TemplateBuilder.exe
        mkdir -p dist
        7z a -bd -mx=9 -mmt dist/RepopulatorCli-win-x64.zip RepopulatorCli-win-x64
        7z a -bd -mx=9 -mmt dist/RepopulatorCli-lin-x64.zip RepopulatorCli-lin-x64
        7z a -bd -mx=9 -mmt dist/template-builder.zip template-builder

    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: |
          dist

    # Remove the pfx
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      if: contains(github.ref, 'refs/tags/v')
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: dist/*.zip
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true
